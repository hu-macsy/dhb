name: Run Builds and Tests

on: [push, pull_request]

jobs:
  linux-build-latest-with-gcc:
    name: 'Linux gcc-11'
    runs-on: ubuntu-24.04
    strategy: 
      matrix: 
        vertexIDType: ['64bit', '32bit']  
    steps:
      - name: Install prerequisites
        run:  |
          sudo apt-get update
          sudo apt-get install ninja-build gcc-11 g++-11
          g++ --version

      - name: Checkout dhb
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: build library, ${{ matrix.vertexIDType }} IDs, run test
        run:  | 
          [ ! -d build ] && mkdir build
          cd build
          mkdir gcc
          cd gcc
          cmake -GNinja -DDHB_BUILD_TESTS=ON -DDHB_WITH_64BIT_IDS=${{ matrix.vertexIDType == '64bit' && 'ON' || 'OFF' }} -DCMAKE_CXX_COMPILER=g++-11 ../../
          ninja
          ./dhb_test

  macos-build-latest-with-clang:
    name: 'macOS clang'
    runs-on: macos-14
    strategy: 
      matrix: 
        vertexIDType: ['64bit', '32bit']  
        clangCompiler: ['Clang', 'AppleClang']
        
    steps:
      - name: Install prerequisites
        run: |
          brew install ninja
          brew install libomp
      
      - name: Conditionally install llvm
        if: matrix.clangCompiler == 'Clang'
        run: |
          brew install llvm
  
      - name: Checkout dhb
        uses: actions/checkout@v4
        with:
          submodules: true
      
      - name: build library, ${{ matrix.vertexIDType }} IDs, run test
        env:
          CC: ${{ matrix.clangCompiler == 'Clang' && '/opt/homebrew/opt/llvm/bin/clang' || 'cc' }}
          CXX: ${{ matrix.clangCompiler == 'Clang' && '/opt/homebrew/opt/llvm/bin/clang++' || 'c++' }}
        run:  | 
          [ ! -d build ] && mkdir build
          cd build
          mkdir clang
          cd clang
          cmake -GNinja -DDHB_BUILD_TESTS=ON -DDHB_WITH_64BIT_IDS=${{ matrix.vertexIDType == '64bit' && 'ON' || 'OFF' }} ../../
          ninja
          ./dhb_test
